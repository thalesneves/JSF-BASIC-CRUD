<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Hibernate Search 5.11.0.CR1 is out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/s17fD7Z6mWc/" /><category term="elasticsearch" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate search" scheme="searchisko:content:tags" /><category term="lucene" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Yoann Rodière</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_search_5_11_0_cr1_is_out</id><updated>2018-12-05T07:48:22Z</updated><published>2018-12-05T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We just published 5.11.0.CR1, the first candidate release for the 5.11 branch. This release mainly includes an upgrade to Hibernate ORM 5.4.0.CR2.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;!-- more --&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Here are some notable changes since Hibernate Search 5.10.5.Final:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3410"&gt;HSEARCH-3410&lt;/a&gt;: Hibernate Search’s ORM integration now depends on Hibernate ORM 5.4.0.CR2.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3420"&gt;HSEARCH-3420&lt;/a&gt;: Hibernate Search is now systematically built and tested against JDK11, meaning it will work out-of-the box on JDK11.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH-3364"&gt;HSEARCH-3364&lt;/a&gt;: The WildFly feature packs now target WildFly 14.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For a full list of changes since 5.10.5.Final, please see &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10061&amp;amp;version=31731"&gt;the release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-to-get-this-release"&gt;&lt;a class="anchor" href="#how-to-get-this-release"&gt;&lt;/a&gt;How to get this release&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/search/releases/5.11/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/hibernate-search"&gt;hibernate-search tag on Stackoverflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-search"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HSEARCH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/s17fD7Z6mWc" height="1" width="1" alt=""/&gt;</content><summary>We just published 5.11.0.CR1, the first candidate release for the 5.11 branch. This release mainly includes an upgrade to Hibernate ORM 5.4.0.CR2. What’s new Here are some notable changes since Hibernate Search 5.10.5.Final: HSEARCH-3410: Hibernate Search’s ORM integration now depends on Hibernate ORM 5.4.0.CR2. HSEARCH-3420: Hibernate Search is now systematically built and tested against JDK11, m...</summary><dc:creator>Yoann Rodière</dc:creator><dc:date>2018-12-05T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/12/05/hibernate-search-5-11-0-CR1/</feedburner:origLink></entry><entry><title>Quickly try Red Hat Process Automation Manager in your cloud</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KiMJQpnpIT0/" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="Business Rules" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="developers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="jboss bpm suite" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-quickly_try_red_hat_process_automation_manager_in_your_cloud</id><updated>2018-12-04T17:15:59Z</updated><published>2018-12-04T17:15:59Z</published><content type="html">&lt;p&gt;It&amp;#8217;s been some time since I last talked with you about putting &lt;a href="http://www.schabell.org/2016/03/rocking-appdev-in-cloud-jboss-bpmsuite-install-demo.html" target="_blank" rel="noopener"&gt;JBoss BPM Suite (now called Red Hat Process Automation Manager) into your cloud&lt;/a&gt;, and with the new release, it&amp;#8217;s time to talk AppDev in the cloud again.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s time to update the story and see how to put &lt;a href="https://developers.redhat.com/products/rhpam/overview/" target="_blank" rel="noopener"&gt;Red Hat Process Automation Manager&lt;/a&gt; in your cloud so you are set up with a standard configuration to start your first business rules project.&lt;/p&gt; &lt;p&gt;With the easy installation demo project described below, you can leverage process automation tooling through the business central web console running containerized on any &lt;a href="https://developers.redhat.com/products/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a closer look at how this works.&lt;/p&gt; &lt;p&gt;&lt;span id="more-539077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Red Hat Process Automation Manager easy installation&lt;/h3&gt; &lt;div id="attachment_543987" style="width: 310px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-ocp-console.png"&gt;&lt;img class="wp-image-543987 size-medium" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-ocp-console-300x171.png" alt="Log in for Red Hat Process Automation Manager on OpenShift Container Platform" width="300" height="171" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-ocp-console-300x171.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-ocp-console-768x437.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-ocp-console-1024x583.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-ocp-console.png 1600w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;Log in for Red Hat Process Automation Manager on OpenShift Container Platform&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Below is the outline from the easy installation project, a demo that gets you started in the fastest possible way.&lt;/p&gt; &lt;p&gt;The goal here is to get you up and running with a standard configuration to start your first business rules project.&lt;/p&gt; &lt;p&gt;This section will take you through the simple steps to install the example project that gives you a fully operational, fresh-out-of-the-box installation of Red Hat Process Automation Manager.&lt;/p&gt; &lt;p&gt;Not only that, it will be a containerized installation that is created on your OpenShift installation!&lt;/p&gt; &lt;ol&gt; &lt;li&gt;First ensure you have an OpenShift container-based installation, such as one of the following, installed: &lt;ul&gt; &lt;li&gt;&lt;a href="https://gitlab.com/redhatdemocentral/ocp-install-demo" target="_blank" rel="noopener"&gt;RHOCP Install Demo&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Or your own OpenShift installation such as &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;/minishift.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="https://gitlab.com/redhatdemocentral/rhcs-rhpam-install-demo/-/archive/master/rhcs-rhdm-install-demo-master.zip" target="_blank" rel="noopener"&gt;Download and unzip the demo.&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Add products to the &lt;code&gt;installs&lt;/code&gt; directory. &lt;p&gt;&lt;div id="attachment_543997" style="width: 310px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-build-ocp.png"&gt;&lt;img class="wp-image-543997 size-medium" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-build-ocp-300x152.png" alt="Watch the container building live on OpenShift Container Platform" width="300" height="152" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-build-ocp-300x152.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-build-ocp-768x389.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-build-ocp-1024x519.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-build-ocp.png 1139w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;Watch the container being built live on OpenShift Container Platform&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Run &lt;code&gt;init.sh&lt;/code&gt; or &lt;code&gt;init.bat&lt;/code&gt; file. Note that the &lt;code&gt;init.bat&lt;/code&gt; file must be run with administrative privileges.&lt;/li&gt; &lt;li&gt;Now, log in to Red Hat Process Automation Manager and start developing containerized rules projects (the address will be generated by the &lt;code&gt;init&lt;/code&gt; script). OCP example:&lt;br /&gt; &lt;code&gt;http://rhcs-rhpam-install-demo-appdev-in-cloud.192.168.99.100.nip.io/business-central&lt;/code&gt; (username: erics, password: redhatpam1! )&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Be sure to give the container time to not only start up but to also start &lt;a href="https://developers.redhat.com/products/eap/"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt; with Red Hat Process Automation Manager. You can check on this by finding the deployed pod in the OpenShift console and looking in the logs tab.&lt;/p&gt; &lt;div id="attachment_544007" style="width: 310px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-pod-ocp.png"&gt;&lt;img class="wp-image-544007 size-medium" src="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-pod-ocp-300x138.png" alt="The container instance of Red Hat Process Automation Manager on OpenShift Container Platform" width="300" height="138" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-pod-ocp-300x138.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-pod-ocp-768x353.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-pod-ocp-1024x470.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/12/rhcs-rhpam-pod-ocp.png 1600w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;p class="wp-caption-text"&gt;The container instance of Red Hat Process Automation Manager on OpenShift Container Platform&lt;/p&gt;&lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;That&amp;#8217;s it. You can now start developing process automation projects at your leisure.&lt;/p&gt; &lt;p&gt;Stay tuned for more by watching for updates here or by following the projects at &lt;a href="https://gitlab.com/redhatdemocentral" target="_blank" rel="noopener"&gt;Red Hat Demo Central&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;As an extra, you can follow along as the &lt;a href="http://bpmworkshop.gitlab.io/" target="_blank" rel="noopener"&gt;online workshops&lt;/a&gt; and the &lt;a href="http://www.schabell.org/p/red-hat-process-automation-manager.html" target="_blank" rel="noopener"&gt;Red Hat Automation Process Manager starter kit is updated&lt;/a&gt; are updated. Here&amp;#8217;s a separate project with a &lt;a href="https://gitlab.com/bpmworkshop/rhpam-install-demo" target="_blank" rel="noopener"&gt;local installation of Red Hat Process Automation Manager&lt;/a&gt;, in case you want to avoid containers and cloud deployment.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#38;linkname=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fquickly-try-red-hat-process-automation-manager-in-your-cloud%2F&amp;#038;title=Quickly%20try%20Red%20Hat%20Process%20Automation%20Manager%20in%20your%20cloud" data-a2a-url="https://developers.redhat.com/blog/2018/12/04/quickly-try-red-hat-process-automation-manager-in-your-cloud/" data-a2a-title="Quickly try Red Hat Process Automation Manager in your cloud"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/04/quickly-try-red-hat-process-automation-manager-in-your-cloud/"&gt;Quickly try Red Hat Process Automation Manager in your cloud&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KiMJQpnpIT0" height="1" width="1" alt=""/&gt;</content><summary>It’s been some time since I last talked with you about putting JBoss BPM Suite (now called Red Hat Process Automation Manager) into your cloud, and with the new release, it’s time to talk AppDev in the cloud again. It’s time to update the story and see how to put Red Hat Process Automation Manager in your cloud so you are set up with a standard configuration to start your first business rules proj...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-12-04T17:15:59Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/04/quickly-try-red-hat-process-automation-manager-in-your-cloud/</feedburner:origLink></entry><entry><title>XML Language Server and the VSCode Extension</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uGvB3bFHo4E/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="language servers" scheme="searchisko:content:tags" /><category term="Visual Studio Code" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><category term="VS Code Extensions" scheme="searchisko:content:tags" /><category term="XML" scheme="searchisko:content:tags" /><author><name>Nikolas Komonen</name></author><id>searchisko:content:id:jbossorg_blog-xml_language_server_and_the_vscode_extension</id><updated>2018-12-04T14:00:30Z</updated><published>2018-12-04T14:00:30Z</published><content type="html">&lt;p&gt;For my first and ongoing project as an intern at Red Hat, I’ve been working alongside &lt;a href="https://twitter.com/angelozerr"&gt;Angelo Zerr&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; and &lt;a href="https://twitter.com/fbricon"&gt;Fred Bricon&lt;/a&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; to develop an implementation of the &lt;a href="https://developers.redhat.com/blog/2016/06/27/a-common-interface-for-building-developer-tools/"&gt;Language Server Protocol&lt;/a&gt; (LSP)&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; for XML. Through the XML language server,  developer tools like VSCode and Eclipse, get XML syntax highlighting and checking, code completion, document folding, etc.  At the moment we appear to have the most feature rich XML language server implementation, with an essential feature we are most proud of which is our Schema-based support. This makes it much easier for developers to work on any type of project involving XML from the comfort of their favorite editor or IDE.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-540157"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=2T4g9R56Cc0"&gt;Watch a demo of the XML VS Code Extension&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/2T4g9R56Cc0?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;The XML language server is currently available in VSCode (via Red Hat’s &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-xml"&gt;XML extension&lt;/a&gt;), &lt;a href="https://github.com/angelozerr/lsp4e-xml"&gt;Eclipse LSP4E&lt;/a&gt;, and soon in &lt;a href="https://www.eclipse.org/che/"&gt;Eclipse Che,&lt;/a&gt; which should be available in early 2019.&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400;"&gt;Supported features:&lt;/span&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Syntax error reporting&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;General code completion&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Auto-close tags&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Automatic node indentation&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Symbol highlighting&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Document folding&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Document links&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Document symbols and outline&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Renaming support&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Document Formatting&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;DTD validation&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;XSD validation&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;XSD based hover&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;XSD based code completion&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;XSL support&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;XML catalogs&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;File associations&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Code actions&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Schema Caching&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The amount of features will only keep growing, &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;with our second version having recently been released with great improvements, such as local schema caching for faster load times. Some upcoming additions will include major improvements, and fixes to DTD and XSD support which will complement the entire XML suite.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Initiated by Angelo, this language server is a port of Microsoft’s fault-tolerant &lt;a href="https://github.com/Microsoft/vscode/tree/master/extensions/html-language-features/server"&gt;HTML language server&lt;/a&gt; that we have developed in Java. Since XML is a subset of HTML we were able to build upon the underlying structure of the HTML language server. It allowed us cut out some redundancy and enabled the development of XML features to begin as soon as possible.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;If you’d like to contribute to the language server the repository can be &lt;a href="https://github.com/angelozerr/lsp4xml"&gt;found here.&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;It has been a great experience working on this project with Red Hat and the open source community, especially on a tool that has so much potential.&lt;/span&gt;&lt;span style="font-weight: 400;"&gt; And with the growth of lightweight and cloud based IDE’s like &lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; or &lt;a href="https://www.eclipse.org/che/"&gt;Eclipse Che&lt;/a&gt;&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;, language servers will be essential to the success of these editors. Its exciting to know that even as an intern, my work will be a part of a very important movement in the developer space.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;I hope you&amp;#8217;ll try the XML language server in VSCode or your favorite editor that supports the language server protocol and feel free to leave feedback or report any bugs.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-542787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/icon128.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/icon128.png" alt="" width="128" height="128" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Additional Resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2016/06/27/a-common-interface-for-building-developer-tools/"&gt;A common interface for developer tools—&lt;/a&gt;an introduction to the language server protocol by Gorkem Ercan&lt;/li&gt; &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.java"&gt;Language support for Java for Visual Studio Cod by Red Hat&lt;/a&gt;—This Java LSP implementation is one of the most popular extensions in the Visual Studio Code Marketplace.&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/"&gt;Announcing Red Hat OpenShift extension for Visual Studio Code&lt;/a&gt;—Control your OpenShift/Kubernetes development environment from within your IDE.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#38;linkname=XML%20Language%20Server%20and%20the%20VSCode%20Extension" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F04%2Fxml-language-server-vscode-extension%2F&amp;#038;title=XML%20Language%20Server%20and%20the%20VSCode%20Extension" data-a2a-url="https://developers.redhat.com/blog/2018/12/04/xml-language-server-vscode-extension/" data-a2a-title="XML Language Server and the VSCode Extension"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/04/xml-language-server-vscode-extension/"&gt;XML Language Server and the VSCode Extension&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uGvB3bFHo4E" height="1" width="1" alt=""/&gt;</content><summary>For my first and ongoing project as an intern at Red Hat, I’ve been working alongside Angelo Zerr and Fred Bricon to develop an implementation of the Language Server Protocol (LSP) for XML. Through the XML language server,  developer tools like VSCode and Eclipse, get XML syntax highlighting and checking, code completion, document folding, etc.  At the moment we appear to have the most feature ric...</summary><dc:creator>Nikolas Komonen</dc:creator><dc:date>2018-12-04T14:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/04/xml-language-server-vscode-extension/</feedburner:origLink></entry><entry><title>Keycloak 4.7.0.Final Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/I5Pj_WxwmAY/keycloak-470final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_7_0_final_released</id><updated>2018-12-04T12:49:18Z</updated><published>2018-12-04T12:49:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.7.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/I5Pj_WxwmAY" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2018-12-04T12:49:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/12/keycloak-470final-released.html</feedburner:origLink></entry><entry><title>How Kotlin’s coroutines improve code readability</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zOeX1GQ7snw/" /><category term="coroutines" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="kotlin" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Programming Languages" scheme="searchisko:content:tags" /><category term="Project Reactor" scheme="searchisko:content:tags" /><category term="reactive" scheme="searchisko:content:tags" /><category term="reactive programming" scheme="searchisko:content:tags" /><author><name>Faisal Masood</name></author><id>searchisko:content:id:jbossorg_blog-how_kotlin_s_coroutines_improve_code_readability</id><updated>2018-12-03T19:47:58Z</updated><published>2018-12-03T19:47:58Z</published><content type="html">&lt;blockquote&gt; &lt;address&gt;Programs must be written for people to read, and only incidentally for machines to execute. — &lt;a href="https://en.wikiquote.org/wiki/Programming_languages"&gt;Abelson and Sussman&lt;/a&gt;&lt;/address&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href="https://kotlinlang.org"&gt;Kotlin&lt;/a&gt; is a new practical language designed to solve real-world problems. It is based on JVM but there are many &lt;a href="https://kotlinlang.org/docs/reference/comparison-to-java.html"&gt;differences&lt;/a&gt; between Kotlin and Java. Kotlin is a &lt;a href="https://kotlinlang.org/docs/reference/null-safety.html"&gt;null-safe&lt;/a&gt; and &lt;a href="https://kotlinlang.org/docs/reference/faq.html#what-advantages-does-kotlin-give-me-over-the-java-programming-language"&gt;concise&lt;/a&gt; language with support for &lt;a href="https://kotlinlang.org/docs/reference/lambdas.html"&gt;functional&lt;/a&gt; programming. You can try programming in Kotlin &lt;a href="https://try.kotlinlang.org"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://kotlinlang.org"&gt;Kotlin&lt;/a&gt; coroutines provide an easy way to write highly scalable code, using the traditional style of programming, while avoiding having a thread allocated to each task.&lt;/p&gt; &lt;p&gt;In this article, I focus on code readability and how, in my opinion, coroutines provide a cleaner approach to writing code compared to a reactive approach. I have used &lt;a href="https://projectreactor.io"&gt;Project Reactor&lt;/a&gt; to showcase the reactive code; however, the example can be extended to any reactive library, for example, &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt; and &lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html"&gt;CompleteableFuture&lt;/a&gt;. Note that coroutine-based code scales as well as code written using a reactive approach. To me, coroutines are a win-win situation for developers.&lt;span id="more-538337"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;You can read more about Kotlin coroutines &lt;a href="https://kotlinlang.org/docs/reference/coroutines-overview.html"&gt;here&lt;/a&gt;. The very exciting &lt;a href="https://openjdk.java.net/projects/loom/"&gt;Project Loom&lt;/a&gt; is going to bring the lightweight thread model to Java. It is a similar concept as &lt;a href="https://tour.golang.org/concurrency/1"&gt;GOLang routines&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Approach&lt;/h2&gt; &lt;p&gt;I have implemented the following workflow using both Reactor and the coroutines approach. The main function is &lt;code&gt;processOrder&lt;/code&gt;, which performs the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The process starts with concurrent calls to &lt;code&gt;getOrderInfo&lt;/code&gt; and &lt;code&gt;getShipmentInfo&lt;/code&gt;, in parallel.&lt;/li&gt; &lt;li&gt;Upon completion of both the methods mentioned above, the process calls the &lt;code&gt;sendEmail&lt;/code&gt; method.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Let&amp;#8217;s call the &lt;code&gt;processOrder&lt;/code&gt; function the &lt;strong&gt;process&lt;/strong&gt; function and let&amp;#8217;s call the individual &lt;code&gt;getOrderInfo&lt;/code&gt;&lt;em&gt;,&lt;/em&gt; &lt;code&gt;getShipmentInfo&lt;/code&gt;, and &lt;code&gt;sendEmail&lt;/code&gt; functions &lt;strong&gt;business&lt;/strong&gt; functions. This code is available in this &lt;a href="https://github.com/masoodfaisal/coroutines-reactive-code-clarity"&gt;repo&lt;/a&gt;. It showcases how Kotlin couroutines can be used to write more-readable code compared to a reactive approach without losing the scalability benefits.&lt;/p&gt; &lt;h2&gt;Simple is beautiful&lt;/h2&gt; &lt;p&gt;In this section, you can find code that implements the &lt;code&gt;getOrderInfo&lt;/code&gt; and &lt;code&gt;getShipmentInfo&lt;/code&gt; business functions and the &lt;code&gt;processOrder&lt;/code&gt; process function using Kotlin&amp;#8217;s coroutines and also using a reactive approach.&lt;/p&gt; &lt;h4&gt;Business Functions&lt;/h4&gt; &lt;p&gt;Following are examples of the business functions using Kotlin&amp;#8217;s approach. Note that these functions are just representing the business logic with much &lt;a href="https://medium.com/@elye.project/understanding-suspend-function-of-coroutines-de26b070c5ed"&gt;less non-functional overhead&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;fun getOrderInfo(orderId: String): String { return "Order Info $orderId" }&lt;/pre&gt; &lt;pre&gt;fun getShipmentInfo(orderId: String): String { return "Shipped for order $orderId" }&lt;/pre&gt; &lt;p&gt;Note that the same functions when written in Kotlin, mix the non-functional aspects of the code with the business logic.&lt;/p&gt; &lt;pre&gt;Mono&amp;#60;String&amp;#62; getOrderInfo(String orderId) {      return Mono.just("Order Info " + orderId); }&lt;/pre&gt; &lt;pre&gt;Mono&amp;#60;String&amp;#62; getShipmentInfo(StringorderId) { return Mono.just("Shipped for order "+ orderId); }&lt;/pre&gt; &lt;h4&gt;Process Function&lt;/h4&gt; &lt;p&gt;In this section, you can find code that implements the &lt;code&gt;processOrder&lt;/code&gt; process function using Kotlin&amp;#8217;s coroutines and a reactive approach. Note that by using Kotlin&amp;#8217;s approach, the code is highly readable. The code documents itself for what the business function is trying to do.&lt;/p&gt; &lt;pre&gt;fun processOrder() { val orderId = "SN19876" val orderInfo = async { getOrderInfo(orderId) } val shipmentInfo = async { getShipmentInfo(orderId) } sendEmail(shipmentInfo.await(), orderInfo.await()) }&lt;/pre&gt; &lt;p&gt;The snippet below shows the same business process implemented using the reactive approach. The code below is less readable because the non-functional aspects of the code are present with the functional aspects of the business process.&lt;/p&gt; &lt;pre&gt;void processOrder() { String orderIdNumber = "SN19876"; Mono.zip(getOrderInfo(orderIdNumber), getShipmentInfo(orderIdNumber)) .flatMap(data -&amp;#62; sendEmail(data.getT1(), data.getT2())) .doOnSuccess(o -&amp;#62; System.out.println("Email sent " + o)) .subscribe(); }&lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;From the examples above, it is evident that coroutines provide a better alternative for writing more-readable code. The reactive code referenced in this blog can be optimized to reduce more noise, but there will always be non-functional aspects of the code being mixed with the business aspect, which I can avoid now using Kotlin&amp;#8217;s coroutines.&lt;/p&gt; &lt;p&gt;&lt;a href="https://kotlinlang.org/docs/reference/"&gt;Kotlin&lt;/a&gt; is an exciting new programming language, especially if you are coming from a &lt;a href="https://developers.redhat.com/blog/category/java/"&gt;Java&lt;/a&gt; background. You can start your Kotlin journey by attending this &lt;a href="https://www.coursera.org/learn/kotlin-for-java-developers"&gt;coursera course&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In addition, you might find this article interesting: &lt;a href="https://developers.redhat.com/blog/2017/12/07/inter-reactive-kotlin-applications/"&gt;Inter-Reactive Kotlin Applications&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#38;linkname=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fhow-kotlins-coroutines-improve-code-readability%2F&amp;#038;title=How%20Kotlin%E2%80%99s%20coroutines%20improve%20code%20readability" data-a2a-url="https://developers.redhat.com/blog/2018/12/03/how-kotlins-coroutines-improve-code-readability/" data-a2a-title="How Kotlin’s coroutines improve code readability"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/03/how-kotlins-coroutines-improve-code-readability/"&gt;How Kotlin&amp;#8217;s coroutines improve code readability&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zOeX1GQ7snw" height="1" width="1" alt=""/&gt;</content><summary>Programs must be written for people to read, and only incidentally for machines to execute. — Abelson and Sussman Kotlin is a new practical language designed to solve real-world problems. It is based on JVM but there are many differences between Kotlin and Java. Kotlin is a null-safe and concise language with support for functional programming. You can try programming in Kotlin here. Kotlin corout...</summary><dc:creator>Faisal Masood</dc:creator><dc:date>2018-12-03T19:47:58Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/03/how-kotlins-coroutines-improve-code-readability/</feedburner:origLink></entry><entry><title>Network debugging with eBPF (RHEL 8 Beta)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zVrDKKgnO3I/" /><category term="C" scheme="searchisko:content:tags" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="eBPF" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="network troubleshooting" scheme="searchisko:content:tags" /><category term="Networking" scheme="searchisko:content:tags" /><category term="Open vSwitch" scheme="searchisko:content:tags" /><category term="OVS" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><category term="virtual networking" scheme="searchisko:content:tags" /><author><name>Matteo Croce</name></author><id>searchisko:content:id:jbossorg_blog-network_debugging_with_ebpf_rhel_8_beta</id><updated>2018-12-03T12:00:45Z</updated><published>2018-12-03T12:00:45Z</published><content type="html">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt; &lt;p&gt;Networks are fun to work with, but often they are also a source of trouble. Network troubleshooting can be difficult, and reproducing the bad behavior that is happening in the field can be painful as well.&lt;/p&gt; &lt;p&gt;Luckily, there are some tools that come to the aid: network namespaces, virtual machines, &lt;code&gt;tc&lt;/code&gt;, and &lt;code&gt;netfilter&lt;/code&gt;. Simple network setups can be reproduced with network namespaces and &lt;code&gt;veth&lt;/code&gt; devices, while more-complex setups require interconnecting virtual machines with a software bridge and using standard networking tools, like &lt;code&gt;iptables&lt;/code&gt; or &lt;code&gt;tc&lt;/code&gt;, to simulate the bad behavior. If you have an issue with ICMP replies generated because an SSH server is down, &lt;code&gt;iptables -A INPUT -p tcp --dport 22 -j REJECT --reject-with icmp-host-unreachable&lt;/code&gt; in the correct namespace or VM can do the trick.&lt;/p&gt; &lt;p&gt;This article describes using &lt;a href="https://lwn.net/Articles/740157/"&gt;eBPF (extended BPF)&lt;/a&gt;, an extended version of the Berkeley Packet Filter, to troubleshoot complex network issues. eBPF is a fairly new technology and the project is still in an early stage, with documentation and the SDK not yet ready. But that should improve, especially with XDP (eXpress Data Path) being shipped in &lt;a href="https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/"&gt;Red Hat Enterprise Linux 8 Beta&lt;/a&gt;, which you can download and run now.&lt;span id="more-538817"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;While eBPF is not a silver bullet, I think it is a very powerful tool for network debugging and it deserves attention. I am sure it will play a really important role in the future of networks.&lt;/p&gt; &lt;h2 id="the-problem"&gt;The problem&lt;/h2&gt; &lt;p&gt;I was debugging an &lt;a href="https://developers.redhat.com/blog/tag/open-virtual-network/"&gt;Open vSwitch&lt;/a&gt; (OVS) network issue affecting a very complex installation: some TCP packets were scrambled and delivered out of order, and the throughput between VMs was dropping from a sustained 6 Gb/s to an oscillating 2–4 Gb/s. After some analysis, it turned out that the first TCP packet of every connection with the PSH flag set was sent out of order: only the first one, and only one per connection.&lt;/p&gt; &lt;p&gt;I tried to replicate the setup with two VMs, and after many man pages and internet searches, I discovered that both &lt;code&gt;iptables&lt;/code&gt; and &lt;code&gt;nftables&lt;/code&gt; can&amp;#8217;t mangle TCP flags, while &lt;code&gt;tc&lt;/code&gt; could, but it can only overwrite the flags, breaking new connections and TCP in general.&lt;/p&gt; &lt;p&gt;Probably I could have dealt with it using a combination of &lt;code&gt;iptables&lt;/code&gt; mark, &lt;code&gt;conntrack&lt;/code&gt;, and &lt;code&gt;tc&lt;/code&gt;, but then I thought: this could be a job for eBPF.&lt;/p&gt; &lt;h2 id="what-is-ebpf"&gt;What is eBPF?&lt;/h2&gt; &lt;p&gt;eBPF is an extended version of the Berkeley Packet Filter. It adds many improvements to BPF; most notably, it allows writing memory instead of just reading it, so it can also edit packets in addition to filtering them.&lt;/p&gt; &lt;p&gt;eBPF is often referred to as BPF, while BPF is referred to as cBPF (classic BPF), so the word &lt;em&gt;BPF&lt;/em&gt; can be used to represent both, depending on the context: here, I&amp;#8217;m always referring to the extended version.&lt;/p&gt; &lt;p&gt;Under the hood, eBPF uses a very simple bytecode VM that can execute small portions of bytecode and edit some in-memory buffers. eBPF comes with some limitations, to prevent it from being used maliciously:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Cycles are forbidden, so the program will exit in a definite time.&lt;/li&gt; &lt;li&gt;It can&amp;#8217;t access memory other than the stack and a scratch buffer.&lt;/li&gt; &lt;li&gt;Only kernel functions in a whitelist can be called.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The loaded program can be loaded in the kernel in many ways, doing a &lt;a href="http://www.brendangregg.com/ebpf.html"&gt;plethora of debugging and tracing&lt;/a&gt;. In this case, we are interested in how eBPF works with the networking subsystem. There are two ways to use an eBPF program:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Attached via XDP to the very early RX path of a physical or virtual NIC&lt;/li&gt; &lt;li&gt;Attached via &lt;code&gt;tc&lt;/code&gt; to a qdisc just like a normal action, in ingress or egress&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In order to create an eBPF program to attach, it is enough to write some C code and convert it into bytecode. Below a simple example using XDP:&lt;/p&gt; &lt;pre&gt;SEC("prog") int xdp_main(struct xdp_md *ctx) { void *data_end = (void *)(uintptr_t)ctx-&amp;#62;data_end; void *data = (void *)(uintptr_t)ctx-&amp;#62;data; struct ethhdr *eth = data; struct iphdr *iph = (struct iphdr *)(eth + 1); struct icmphdr *icmph = (struct icmphdr *)(iph + 1); /* sanity check needed by the eBPF verifier */ if (icmph + 1 &amp;#62; data_end) return XDP_PASS; /* matched a pong packet */ if (eth-&amp;#62;h_proto != ntohs(ETH_P_IP) || iph-&amp;#62;protocol != IPPROTO_ICMP || icmph-&amp;#62;type != ICMP_ECHOREPLY) return XDP_PASS; if (iph-&amp;#62;ttl) { /* save the old TTL to recalculate the checksum */ uint16_t *ttlproto = (uint16_t *)&amp;#38;iph-&amp;#62;ttl; uint16_t old_ttlproto = *ttlproto; /* set the TTL to a pseudorandom number 1 &amp;#60; x &amp;#60; TTL */ iph-&amp;#62;ttl = bpf_get_prandom_u32() % iph-&amp;#62;ttl + 1; /* recalculate the checksum; otherwise, the IP stack will drop it */ csum_replace2(&amp;#38;iph-&amp;#62;check, old_ttlproto, *ttlproto); } return XDP_PASS; } char _license[] SEC("license") = "GPL";&lt;/pre&gt; &lt;p&gt;The snippet above, stripped of &lt;code&gt;include&lt;/code&gt; statements, helpers, and all the not-necessary code, is an XDP program that changes the TTL of received ICMP echo replies, namely pongs, to a random number. The main function receives a &lt;code&gt;struct xdp_md&lt;/code&gt;, which contains two pointers to the packet start and end.&lt;/p&gt; &lt;p&gt;To compile our code into eBPF bytecode, a compiler with support for it is needed. Clang supports it and produces eBPF bytecode by specifying &lt;code&gt;bpf&lt;/code&gt; as the target at compile time:&lt;/p&gt; &lt;pre&gt;$ clang -O2 -target bpf -c xdp_manglepong.c -o xdp_manglepong.o&lt;/pre&gt; &lt;p&gt;The command above produces a file that seems to be a regular object file, but if inspected, you&amp;#8217;ll see that the reported machine type will be &lt;code&gt;Linux eBPF&lt;/code&gt; rather than the native one of the OS:&lt;/p&gt; &lt;pre&gt;$ readelf -h xdp_manglepong.o ELF Header: Magic: 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 Class: ELF64 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: REL (Relocatable file) Machine: Linux BPF &amp;#60;--- HERE [...]&lt;/pre&gt; &lt;p&gt;Once wrapped in a regular object file, the eBPF program is ready to be loaded and attached to the device via XDP. This can be done using &lt;code&gt;ip&lt;/code&gt;, from the &lt;code&gt;iproute2&lt;/code&gt; suite, using the following syntax:&lt;/p&gt; &lt;pre&gt;# ip -force link set dev wlan0 xdp object xdp_manglepong.o verbose&lt;/pre&gt; &lt;p&gt;This command specified the target interface &lt;code&gt;wlan0&lt;/code&gt;, and with the &lt;code&gt;-force&lt;/code&gt; option, it will overwrite any existing eBPF code already loaded. After loading the eBPF bytecode, this is the system behavior:&lt;/p&gt; &lt;pre&gt;$ ping -c10 192.168.85.1 PING 192.168.85.1 (192.168.85.1) 56(84) bytes of data. 64 bytes from 192.168.85.1: icmp_seq=1 ttl=41 time=0.929 ms 64 bytes from 192.168.85.1: icmp_seq=2 ttl=7 time=0.954 ms 64 bytes from 192.168.85.1: icmp_seq=3 ttl=17 time=0.944 ms 64 bytes from 192.168.85.1: icmp_seq=4 ttl=64 time=0.948 ms 64 bytes from 192.168.85.1: icmp_seq=5 ttl=9 time=0.803 ms 64 bytes from 192.168.85.1: icmp_seq=6 ttl=22 time=0.780 ms 64 bytes from 192.168.85.1: icmp_seq=7 ttl=32 time=0.847 ms 64 bytes from 192.168.85.1: icmp_seq=8 ttl=50 time=0.750 ms 64 bytes from 192.168.85.1: icmp_seq=9 ttl=24 time=0.744 ms 64 bytes from 192.168.85.1: icmp_seq=10 ttl=42 time=0.791 ms --- 192.168.85.1 ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 125ms rtt min/avg/max/mdev = 0.744/0.849/0.954/0.082 ms&lt;/pre&gt; &lt;p&gt;Every packet received goes through eBPF, which eventually does some transformation and decides to drop or let the packet pass.&lt;/p&gt; &lt;h2 id="how-ebpf-come-to-help"&gt;How eBPF can help&lt;/h2&gt; &lt;p&gt;Going back to the original network issue, I needed to mangle some TCP flags, only one per connection, and neither &lt;code&gt;iptables&lt;/code&gt; nor &lt;code&gt;tc&lt;/code&gt; allow doing that. Writing C code for this scenario would be very easy: set up two VMs linked by an OVS bridge and simply attach eBPF to one of the two VM virtual devices.&lt;/p&gt; &lt;p&gt;This looks like a nice solution, but you must take into account that XDP only supports handling of received packets, and attaching eBPF in the &lt;code&gt;rx&lt;/code&gt; path of the receiving VM will have no effect on the switch.&lt;/p&gt; &lt;p&gt;To properly address this, eBPF has to be loaded using &lt;code&gt;tc&lt;/code&gt; and attached in the egress path within the VM, as &lt;code&gt;tc&lt;/code&gt; can load and attach eBPF programs to a qdisc just like any other action. In order to mangle packets leaving the host, an egress qdisc is needed to attach eBPF to.&lt;/p&gt; &lt;p&gt;There are small differences between the &lt;code&gt;XDP&lt;/code&gt; and &lt;code&gt;tc&lt;/code&gt; API when loading an eBPF program: the default section name differs, the argument of the main function has a different structure type, and the returned values are different, but this is not a big issue. Below is a snippet of a program that does TCP mangling when attached to a &lt;code&gt;tc&lt;/code&gt; action:&lt;/p&gt; &lt;pre&gt;#define RATIO 10 SEC("action") int bpf_main(struct __sk_buff *skb) { void *data = (void *)(uintptr_t)skb-&amp;#62;data; void *data_end = (void *)(uintptr_t)skb-&amp;#62;data_end; struct ethhdr *eth = data; struct iphdr *iph = (struct iphdr *)(eth + 1); struct tcphdr *tcphdr = (struct tcphdr *)(iph + 1); /* sanity check needed by the eBPF verifier */ if ((void *)(tcphdr + 1) &amp;#62; data_end) return TC_ACT_OK; /* skip non-TCP packets */ if (eth-&amp;#62;h_proto != __constant_htons(ETH_P_IP) || iph-&amp;#62;protocol != IPPROTO_TCP) return TC_ACT_OK; /* incompatible flags, or PSH already set */ if (tcphdr-&amp;#62;syn || tcphdr-&amp;#62;fin || tcphdr-&amp;#62;rst || tcphdr-&amp;#62;psh) return TC_ACT_OK; if (bpf_get_prandom_u32() % RATIO == 0) tcphdr-&amp;#62;psh = 1; return TC_ACT_OK; } char _license[] SEC("license") = "GPL";&lt;/pre&gt; &lt;p&gt;The compilation into bytecode is done as in the XDP example before via the following:&lt;/p&gt; &lt;pre&gt;clang -O2 -target bpf -c tcp_psh.c -o tcp_psh.o&lt;/pre&gt; &lt;p&gt;But the loading is different:&lt;/p&gt; &lt;pre&gt;# tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress matchall action bpf object-file tcp_psh.o&lt;/pre&gt; &lt;p&gt;At this point, eBPF is loaded in the right place and packets leaving the VM are mangled. By checking the received packets from the second VM, you can see the following:&lt;/p&gt; &lt;pre&gt;# tcpdump -tnni eth0 -Q in [1579537.890082] device eth0 entered promiscuous mode tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 809667041:809681521, ack 3046223642, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 14480:43440, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 43440:101360, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 101360:131072, ack 1, length 29712 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 131072:145552, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 145552:174512, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 174512:210712, ack 1, length 36200 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 210712:232432, ack 1, length 21720 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 232432:246912, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 246912:262144, ack 1, length 15232 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 262144:276624, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 276624:305584, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 305584:363504, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 363504:393216, ack 1, length 29712 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 393216:407696, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 407696:436656, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 436656:494576, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 494576:524288, ack 1, length 29712 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 524288:538768, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 538768:567728, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 567728:625648, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 625648:627096, ack 1, length 1448 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 627096:655360, ack 1, length 28264&lt;/pre&gt; &lt;p&gt;&lt;code&gt;tcpdump&lt;/code&gt; confirms that the new eBPF code is working, and about 1 of every 10 TCP packets has the PSH flag set. With just 20 lines of C code, we selectively mangled the TCP packets leaving a VM, replicating an error that happened in the field, all without recompiling any driver and without even rebooting! This simplified a lot the validation of the &lt;a href="https://github.com/openvswitch/ovs/commit/9b4f08cdcaf253175edda088683bdd3db9e4c097"&gt;Open vSwitch fix&lt;/a&gt; in a manner that was impossible to do with other tools.&lt;/p&gt; &lt;h2 id="conclusions"&gt;Conclusion&lt;/h2&gt; &lt;p&gt;eBPF is a fairly new technology, and the community has strong opinions about its adoption. It&amp;#8217;s also worth noting that eBPF-based projects like &lt;a href="https://lwn.net/Articles/747551/"&gt;bpfilter&lt;/a&gt; are becoming more popular, and as consequence, various hardware vendors are starting to implement eBPF support directly in their NICs.&lt;/p&gt; &lt;p&gt;While eBPF is not a silver bullet and should not be abused, I think it is a very powerful tool for network debugging and it deserves attention. I am sure it will play a really important role in the future of networks.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Download &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;strong&gt;&lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux 8 Beta&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;and try eBPF.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;h2&gt;Additional Resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/open-vswitch/"&gt;Articles on Open vSwitch&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/ovn/"&gt;Articles on Open Virtual Network&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/12/13/introducing-stapbpf-systemtaps-new-bpf-backend/" rel="bookmark"&gt;Introducing stapbpf – SystemTap’s new BPF backend&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#038;title=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" data-a2a-url="https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/" data-a2a-title="Network debugging with eBPF (RHEL 8 Beta)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/"&gt;Network debugging with eBPF (RHEL 8 Beta)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zVrDKKgnO3I" height="1" width="1" alt=""/&gt;</content><summary>Introduction Networks are fun to work with, but often they are also a source of trouble. Network troubleshooting can be difficult, and reproducing the bad behavior that is happening in the field can be painful as well. Luckily, there are some tools that come to the aid: network namespaces, virtual machines, tc, and netfilter. Simple network setups can be reproduced with network namespaces and veth...</summary><dc:creator>Matteo Croce</dc:creator><dc:date>2018-12-03T12:00:45Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/</feedburner:origLink></entry><entry><title>Common architectural elements for modern integration architectures (Part 2)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/G5w6pwk9k60/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Customer Experience" scheme="searchisko:content:tags" /><category term="developers" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat Customers" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-common_architectural_elements_for_modern_integration_architectures_part_2</id><updated>2018-11-30T12:00:51Z</updated><published>2018-11-30T12:00:51Z</published><content type="html">&lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;Part 1 of this series&lt;/a&gt;, we explored a use case around integration being the key to transforming your customer experience.&lt;/p&gt; &lt;p&gt;I laid out how I&amp;#8217;ve approached the use case and how I&amp;#8217;ve used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you&amp;#8217;ll be led through the blueprint details.&lt;/p&gt; &lt;p&gt;This article, which is Part 2 of the series, starts the real journey at the very top, with a generic architecture from which we&amp;#8217;ll discuss the common architectural elements one by one.&lt;/p&gt; &lt;p&gt;&lt;span id="more-536977"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;From specific to generic&lt;/h2&gt; &lt;p&gt;Before diving into the common elements, it might be good to understand that this is not a catch-all for every possible integration solution. It&amp;#8217;s a collection of identified elements that I&amp;#8217;ve uncovered in multiple customer implementations. The elements presented here are then the &lt;i&gt;generic common architectural elements&lt;/i&gt; that I&amp;#8217;ve identified and collected into the generic architectural blueprint.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s my intent to provide a blueprint that provides guidance and not deep technical details. You&amp;#8217;re smart enough to figure out wiring integration points for your own architectures. You&amp;#8217;re capable of slotting in the technologies and components you&amp;#8217;ve committed to in the past, where applicable. It&amp;#8217;s my job here to describe the architectural blueprint generic components and outline a few specific cases with visual diagrams so that you&amp;#8217;re able to make the right decisions from the start of your integration projects.&lt;/p&gt; &lt;p&gt;Another challenge has been how to visually represent the architectural blueprint. There are many ways to represent each element, but I&amp;#8217;ve chosen some icons, text, and colors that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/p&gt; &lt;p&gt;Now let&amp;#8217;s take a quick tour of the generic architecture and outline the common elements uncovered in my research.&lt;/p&gt; &lt;h2&gt;External applications&lt;/h2&gt; &lt;p&gt;Starting at the top of the diagram, which is by no means a geographical necessity, there are two elements that represent external applications that interact with the architecture. Distilling the various applications discovered in customer solution research, I&amp;#8217;ve come up with two common representations:&lt;/p&gt; &lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-Iziyw9LYfEs/W-yPjBdM3OI/AAAAAAAAtR4/BzwK4cJxq6UbusLUs3DjzzqZcmqhcpbmQCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.02.50.png"&gt;&lt;img class="aligncenter" src="https://1.bp.blogspot.com/-Iziyw9LYfEs/W-yPjBdM3OI/AAAAAAAAtR4/BzwK4cJxq6UbusLUs3DjzzqZcmqhcpbmQCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.02.50.png" alt="Common architectural elements for external application deployments" width="320" height="34" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The first is &lt;i&gt;mobile applications, &lt;/i&gt;covering basically everything that customers use to interact directly with a company. This can be mobile applications deployed by the company itself or developed by third-party organizations to interact with the services offered.&lt;/p&gt; &lt;p&gt;The second is &lt;i&gt;web applications,&lt;/i&gt; a broad element to contain all other types of applications, websites, and/or services that are deployed by the company or any third-party organizations to interact with the services offered.&lt;/p&gt; &lt;h2&gt;API gateway and proxy&lt;/h2&gt; &lt;p&gt;These elements in the common architecture are found in every customer solution researched. They were mentioned by name and consisted of an &lt;i&gt;Application Programming Interface (API) gateway&lt;/i&gt; that managed access from external applications when calling internal customer solution services.&lt;/p&gt; &lt;p&gt;The proxy shown was a &lt;i&gt;reverse proxy&lt;/i&gt;, a standard solution for providing a security layer between external applications calling internal services by hiding the internal addresses.&lt;/p&gt; &lt;p&gt;&lt;a href="https://4.bp.blogspot.com/-FDF3y0ULHPY/W-yT21e0HiI/AAAAAAAAtSI/3Erw7wbcSqc4dae7_r5aQPga_-TwRZB_wCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.29.52.png"&gt;&lt;img class="aligncenter" src="https://4.bp.blogspot.com/-FDF3y0ULHPY/W-yT21e0HiI/AAAAAAAAtSI/3Erw7wbcSqc4dae7_r5aQPga_-TwRZB_wCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.29.52.png" alt="Common architectural elements are API's and proxies" width="320" height="53" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Container platform&lt;/h2&gt; &lt;p&gt;Without a doubt, every organization engaged in omnichannel integrations to improve customer experience has seen the value of &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; and the use of a container platform. The container platform provides for one consistent environment for developers and operations to manage services, applications, integration points, process integration, and security.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-bPVroYZKt4o/W-yVdB48QwI/AAAAAAAAtSY/EiH9T_e8wLcF7wnCcQm7tkG1gldhS7GZwCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.31.25.png"&gt;&lt;img class="aligncenter" src="https://1.bp.blogspot.com/-bPVroYZKt4o/W-yVdB48QwI/AAAAAAAAtSY/EiH9T_e8wLcF7wnCcQm7tkG1gldhS7GZwCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.31.25.png" alt="Common architectural element is a container platform" width="320" height="92" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&amp;#8217;s also the one way to ensure you can uniformly leverage the same container infrastructure across a hybrid multicloud environment. It prevents you from becoming locked into any private or cloud infrastructure because you have an exit strategy with a container platform that&amp;#8217;s consistent across your architecture.&lt;/p&gt; &lt;p&gt;The security aspect is interwoven in the container platform, because each container service, application, or process integration can be plugged into an organization&amp;#8217;s authentication and authorization mechanisms.&lt;/p&gt; &lt;h2&gt;Storage services&lt;/h2&gt; &lt;p&gt;The storage services uncovered in customer solution research were diverse and numerous. For that reason, there is no single common architectural element shown at the highest level. Everything from container native storage to traditional block storage was found.&lt;/p&gt; &lt;p&gt;&lt;a href="https://4.bp.blogspot.com/-MLI9T5RwmPU/W-yWuOYjzDI/AAAAAAAAtSk/uYb7F7PjbT8_64yMPJlapM2kt8yiI7atwCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.39.45.png"&gt;&lt;img class="aligncenter" src="https://4.bp.blogspot.com/-MLI9T5RwmPU/W-yWuOYjzDI/AAAAAAAAtSk/uYb7F7PjbT8_64yMPJlapM2kt8yiI7atwCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.39.45.png" alt="Common architectural elements in storage services" width="320" height="108" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In later articles, when more detail is shown, I&amp;#8217;ll make a point to present a few of the options chosen by customers integrating data services with processes and applications.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next&lt;/h2&gt; &lt;p&gt;This was just a short overview of the common generic elements that make up our architecture blueprint for the ominchannel customer experience use case.&lt;/p&gt; &lt;p&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;Part 1: How integration is key to customer experience&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/"&gt;Common architectural elements for modern integration architectures (this article)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Details of specific elements (external apps, API gateways, container platform storage services)&lt;/li&gt; &lt;li&gt;Application integration details&lt;/li&gt; &lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Catch up on any articles you missed by following one of the links above.&lt;/p&gt; &lt;p&gt;Next in this series, we&amp;#8217;ll be taking a look at the details of specific elements in an architecture for omnichannel customer experience.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#038;title=Common%20architectural%20elements%20for%20modern%20integration%20architectures%20%28Part%202%29" data-a2a-url="https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/" data-a2a-title="Common architectural elements for modern integration architectures (Part 2)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/"&gt;Common architectural elements for modern integration architectures (Part 2)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/G5w6pwk9k60" height="1" width="1" alt=""/&gt;</content><summary>In Part 1 of this series, we explored a use case around integration being the key to transforming your customer experience. I laid out how I’ve approached the use case and how I’ve used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you’ll be led through the blueprint details. This article,...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-30T12:00:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/</feedburner:origLink></entry><entry><title>Workbench is now Business Central!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Zq-RIVsdm6o/workbench-is-now-business-central.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Mario Fusco</name></author><id>searchisko:content:id:jbossorg_blog-workbench_is_now_business_central</id><updated>2018-11-30T15:08:59Z</updated><published>2018-11-30T11:39:00Z</published><content type="html">&lt;div id="preamble"&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph first-letter-capital"&gt;Article originally posted &lt;a href="http://porcelli.me/rhba/business-central/2018/11/29/business-central-consolidation.html" target="_blank"&gt;here&lt;/a&gt; by Alex Porcelli &lt;br /&gt;&lt;br /&gt;5 years ago, on November 2013 we released &lt;a href="https://search.maven.org/artifact/org.kie/kie-wb/6.0.0.Final/pom" rel="noopener" target="_blank"&gt;6.0.0.Final&lt;/a&gt;, that included the first version of the Workbench. It has been a long journey so far, but today we’re announcing that we’re retiring the Workbench brand and officially adopting Business Central as the new brand!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="historical-context"&gt;Historical Context&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;The KIE group has been developing web tooling for more than a decade now. The first public release that shipped a browser based tool was &lt;a href="https://search.maven.org/artifact/org.drools/drools-guvnor/5.0.1/war" rel="noopener" target="_blank"&gt;5.0.1&lt;/a&gt; (May of 2009), but its R&amp;amp;D started way before that.&lt;/div&gt;&lt;div class="admonitionblock tip"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="icon"&gt;&lt;div class="title"&gt;Tip&lt;/div&gt;&lt;/td&gt;&lt;td class="content"&gt;KIE stands for &lt;b&gt;Knowledge Is Everything&lt;/b&gt;, and it is pronounced exactly the word &lt;b&gt;key&lt;/b&gt; in English: &lt;i&gt;/kē/&lt;/i&gt; .&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;The first experiments of a web-based tool to manage a central repository for business rules that provided an intuitive user interface to create and package rules started back in &lt;a href="https://github.com/kiegroup/guvnor/commit/141aabe8b3c2629eb3762e966ebc7de6a5d90a94" rel="noopener" target="_blank"&gt;September 2006&lt;/a&gt; as jbrms. After a couple of years, it was renamed to &lt;a href="https://github.com/kiegroup/guvnor/tree/0b8044cd73a61b2fb0283e3ca880d1e38231d126" rel="noopener" target="_blank"&gt;Guvnor&lt;/a&gt;, and this is the name that would become known as the official name of our first web tooling.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="imageblock" id="img-guvnor" style="text-align: center;"&gt;&lt;div class="content"&gt;&lt;img alt="guvnor" src="http://porcelli.me/images/blog/guvnor.png" /&gt;&lt;/div&gt;&lt;div class="title"&gt;Figure 1. Guvnor Guided Rule Editor User Interface.&lt;/div&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;br /&gt;The next generation that became known as Workbench started its R&amp;amp;D in &lt;a href="https://github.com/AppFormer/uberfire/tree/5c9a67e9eb6cce2e27a96d2fa3c272f0fbdbb33c" rel="noopener" target="_blank"&gt;May of 2012&lt;/a&gt; with multiple goals and challenges that could be summarized in the following major two key points:&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;A modular, plug-in based, composable tooling, to avoid the single project/repo that Guvnor became over the years&lt;/li&gt;&lt;li&gt;A Virtual File System based storage, to avoid getting stuck with a technology like &lt;a href="https://www.jcp.org/en/jsr/detail?id=170" rel="noopener" target="_blank"&gt;JCR&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="imageblock" id="img-workbench" style="text-align: center;"&gt;&lt;div class="content"&gt;&lt;img alt="workbench" src="http://porcelli.me/images/blog/workbench.png" /&gt;&lt;/div&gt;&lt;div class="title"&gt;Figure 2. Workbench Original NSEW Compass Drag-and-Drop&lt;/div&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;br /&gt;If you’re feeling nostalgic, you can play &lt;a href="https://www.youtube.com/watch?v=ckAznbOOV-4" rel="noopener" target="_blank"&gt;this &lt;/a&gt; video, and get back to May of 2013, a few months before the release. But if you have time, and want to see how our fresh released second generation looked like in practice, you have a full &lt;a href="https://www.youtube.com/playlist?list=PLb9jQNHBKBRj9IJkc_F5nCJAvXaegOGW8" rel="noopener" target="_blank"&gt;playlist&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="evolution"&gt;Evolution&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;The Workbench has been distributed in two flavors: KIE Drools Workbench and KIE Workbench. Initially, the KIE Workbench used to be shipped with an embedded jBPM engine, what made the distributions significantly different. However, with the KIE-Server release and the engine unification, the embedded jBPM engine was removed from Workbench, and the differences between the two distros became just a matter of show/hide some user interface items.&lt;/div&gt;&lt;div class="paragraph"&gt;It’s also clear that the current Workbench has very little in common with its original format. Over the years it not only get more polished and stable, but the target audience has evolved from a developer focused to a collaborative platform between practitioners and developers.&lt;/div&gt;&lt;div class="paragraph"&gt;Based on the above facts and also looking for a more concise branding strategy a decision was made: unify the distributions and re-brand it as &lt;b&gt;Business Central&lt;/b&gt;!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="business-central"&gt;Business Central&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;So what’s in the new name? The major positive impact is that we have now a single distribution and terminology to reference the KIE group web tooling, that also unifies the product and community terminology.&lt;/div&gt;&lt;div class="paragraph"&gt;Here’s a quick walkthrough of the changes you’ll see in the new Business Central:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="imageblock" id="img-business-central" style="text-align: center;"&gt;&lt;div class="content"&gt;&lt;img alt="business-central" src="http://porcelli.me/images/blog/new-business-central.gif" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect2"&gt;&lt;h3 id="profiles-and-entitlements"&gt;Profiles and Entitlements&lt;/h3&gt;&lt;div class="paragraph"&gt;By default Business Central bootstrap with all the features enabled, that includes Drools, OptaPlanner, and jBPM. However, for those that are not taking advantage of our jBPM engine, we provide in settings a Profiles option that allows admins to adjust Business Central to display only the relevant profile to your needs.&lt;/div&gt;&lt;div class="paragraph"&gt;The default profile can be also be defined in the startup using the &lt;code&gt;org.kie.workbench.profile&lt;/code&gt; environment variable with the following possible values:&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;FULL&lt;/li&gt;&lt;li&gt;PLANNER_AND_RULES&lt;/li&gt;&lt;li&gt;FORCE_FULL&lt;/li&gt;&lt;li&gt;FORCE_PLANNER_AND_RULES&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;The main difference between the "FORCE_" values is that it will hide the settings configuration, forcing the chosen profile.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;After five years, the KIE group has decided that was time to retire the Workbench brand. Our web tooling evolved quite a lot and the use of the word Workbench, a common term for developers, didn’t reflect the current state of it.&lt;/div&gt;&lt;div class="paragraph"&gt;The consolidation and re-branding to Business Central aims to provide a clear message about its targeted audience with a concise communication strategy. If you’re interested in giving it a try, Business Central is available to &lt;a href="https://repository.jboss.org/nexus/content/groups/public/org/kie/business-central/7.15.0.Final/business-central-7.15.0.Final-wildfly14.war" rel="noopener" target="_blank"&gt;download&lt;/a&gt; today!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=b5FW7U1JKes:_DZWyzmUaGk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=b5FW7U1JKes:_DZWyzmUaGk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=b5FW7U1JKes:_DZWyzmUaGk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/b5FW7U1JKes" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Zq-RIVsdm6o" height="1" width="1" alt=""/&gt;</content><summary>Article originally posted here by Alex Porcelli 5 years ago, on November 2013 we released 6.0.0.Final, that included the first version of the Workbench. It has been a long journey so far, but today we’re announcing that we’re retiring the Workbench brand and officially adopting Business Central as the new brand! Historical Context The KIE group has been developing web tooling for more than a decad...</summary><dc:creator>Mario Fusco</dc:creator><dc:date>2018-11-30T11:39:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/b5FW7U1JKes/workbench-is-now-business-central.html</feedburner:origLink></entry><entry><title>Apache Camel 2.23 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZOlZxyqtIVU/apache-camel-223-released.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_2_23_released</id><updated>2018-11-30T10:30:35Z</updated><published>2018-11-30T10:30:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Yesterday &lt;a href="http://camel.apache.org/2018/11/29/apache-camel-2230-released.html"&gt;Apache Camel 2.23&lt;/a&gt; was released which most noteworthy new feature is support for Spring Boot 2.1, where we also improved the starter components to include more metadata and more optimized for the improved Spring Boot auto configuration.&lt;br /&gt;&lt;br /&gt;This release is mainly a big bug fix release and some other minor new features. One of these features is to allow for basic dynamic queries in the SQL component on the consumer side.&lt;br /&gt;&lt;br /&gt;And as usual there are new components added too:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;AWS IAM - for managing Amazon IAM&lt;/li&gt;&lt;li&gt;Corda - to interactive with corda nodes&lt;/li&gt;&lt;li&gt;FHIR - to work with the fhir standard (health care)&lt;/li&gt;&lt;li&gt;Google Big Query Standard SQL - Google bigdata warehouse analytics&lt;/li&gt;&lt;li&gt;Google Calendar Stream - Google calendar in streaming mode&lt;/li&gt;&lt;li&gt;Google Sheets - To work with google sheets&lt;/li&gt;&lt;li&gt;Google Sheets Stream - To work with google sheets in streaming mode&lt;/li&gt;&lt;li&gt;IPFS - Interplanetary File System&lt;/li&gt;&lt;li&gt;Kubernetes HPA - To execute Kubernetes HPA operations&lt;/li&gt;&lt;li&gt;Kubernetes Job - To execute Kubernetes job operations&lt;/li&gt;&lt;li&gt;NSQ - To integrate with the NSQ messaging system&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The next release will be Camel 2.24 which potentially are the last 2.x release as we are about to kick-off work on Camel 3.0. More details to follow soon.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=nHSZ3n5idPI:GgmPlwipM9E:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=nHSZ3n5idPI:GgmPlwipM9E:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=nHSZ3n5idPI:GgmPlwipM9E:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/nHSZ3n5idPI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZOlZxyqtIVU" height="1" width="1" alt=""/&gt;</content><summary>Yesterday Apache Camel 2.23 was released which most noteworthy new feature is support for Spring Boot 2.1, where we also improved the starter components to include more metadata and more optimized for the improved Spring Boot auto configuration. This release is mainly a big bug fix release and some other minor new features. One of these features is to allow for basic dynamic queries in the SQL com...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2018-11-30T10:30:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/nHSZ3n5idPI/apache-camel-223-released.html</feedburner:origLink></entry><entry><title>Tipping Points in Open Source</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AfVDccvtn7E/tipping-points-in-open-source.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="CNCF" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-tipping_points_in_open_source</id><updated>2018-12-05T11:16:21Z</updated><published>2018-11-30T09:49:00Z</published><content type="html">&lt;span style="font-family: inherit;"&gt;&lt;i&gt;Follow me on&lt;a class="markup--anchor markup--p-anchor" data-href="http://twitter.com/bibryam" href="http://twitter.com/bibryam" rel="noopener nofollow noopener" target="_blank"&gt; twitter&lt;/a&gt; for other posts in this space. A shorter version of this post was originally published on &lt;a href="https://opensource.com/article/18/11/3-new-tipping-points-open-source" target="_blank"&gt;Opensource.com&lt;/a&gt; under CC BY-SA 4.0. &lt;/i&gt;&lt;/span&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/tipping-points-in-open-source-955546031f27" target="_blank"&gt;Medium&lt;/a&gt;.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;Over the last two decades open source has been expanding into all aspects of technology: from software to &lt;a href="https://opensource.com/resources/what-open-hardware" target="_blank"&gt;hardware&lt;/a&gt;, from small disruptive startup technologies to large &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;boring &lt;/span&gt;enterprise software, from open standards to &lt;a href="https://www.redhat.com/en/blog/red-hat-welcomes-milestone-addition-open-invention-network-microsoft-joins-safeguard-linux-patent-attacks?extIdCarryOver=true&amp;amp;sc_cid=70160000001273HAAQ" target="_blank"&gt;open patents&lt;/a&gt;. In this short post, I will try to call out a three tendencies that I think are reaching the tipping point in open source.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt; Open for Non-Coders&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;For good or bad, as the name open &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;"&lt;/span&gt;source" suggests, this model has been primarily focused around the source code. Regardless of the intent or the believes, if we look at the open source communities, they are primarily composed of developers who are working on the source code. If we look deeper, the tools used in open source projects such as source control systems, issue trackers, mailing list names, chat channel names, etc - they all assume that the developers are the center of the universe. And that has caused a big loss. It is a big loss not having creative people, designers, document writers, event organizers, community managers, lawyers, accountants, and many others as part of the open source communities. We don't have such individuals actively participating in the open source communities because we don't have the processes and tools for such an inclusion yet. We need and want non-code contributions, but we don't have the means to measure their value, nor ways to reward their efforts in return. Reward by &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;recognition from &lt;/span&gt;peers, by the community, by the employers, or anybody in general. As a result, it has been a lose-lose for decades. And we can see the implications in many open source projects with ugly looking websites, amateur logos, badly written and formatted documentation, disorganized events, etc. All of that leading for the so called "open source companies" filling the gap when it is inherently an open source problem.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;br /&gt;&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;The good news is that we are getting various signals indicating it is reaching the tipping point and a change is on the way:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Linus Torvalds &lt;a href="https://lkml.org/lkml/2018/9/16/167" target="_blank"&gt;apologises&lt;/a&gt; for his "bad behavior". While this is not an action specifically focused around non-coders, it is a very symbolic act in making "open source" a non-hostile place for less-technical contributors.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;CNCF introduced the non-code contributions &lt;a href="https://kubernetes.io/blog/2018/10/04/introducing-the-non-code-contributors-guide/" target="_blank"&gt;guide&lt;/a&gt;. In addition to showing how many ways there are for contributing to open source projects as a non-coder, this also sets the baseline for such contributions that other open source projects and foundations will end up following to keep up.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;More or less around at the same time, ASF has been working in the same direction. There have been long discussions and we will have some concrete output very soon (that is ASF soon).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;And there is a little known secret. One thing that non-coders (and new to open source) do not realize yet is that the easiest way to be recognized and become part of an established open source project is by performing non-coding activities. Nowadays, with complex software stacks, and tough competition, there is a pretty high bar for entering a project as a committer. Performing non-coding activities is less popular and it opens a fast backdoor to the open source communities.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt; Macro Acquisitions&lt;/span&gt;&lt;/h3&gt;&lt;div class="graf graf--p graf-after--p" id="fc0a" name="fc0a"&gt;&lt;span style="font-family: inherit;"&gt;Open source may have started in the hacker community as a way of scratching developers' personal itch, but today, it is the model where innovation happens. It is the model that even worlds largest software companies are transitioning to in order to continue dominating. And why is the enterprise so interested in open source? The "&lt;i&gt;Open Source in the Enterprise&lt;/i&gt;" &lt;a href="https://aws.amazon.com/opensource/enterprise-oss-book/" target="_blank"&gt;fee e-book&lt;/a&gt; I came across recently lists a few good reasons:&lt;/span&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Multiplying the company’s investment through contributions. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Benefiting from the most recent advances and avoid reinvent the wheel in-house. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Spreading knowledge of the software and its broader adoption. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Increasing the developer base and hiring pool. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Upgrading internal developer skills by learning from top coders in the field. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Building reputation - developers want to work for organizations they can boast about. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Recruiting and retaining - developers want to work on exciting projects that affect large groups of people. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Faster startup of new companies and projects through open source networking effect, etc.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;Many of these and other benefits of open source are recognized by large organizations which leads to even more open source adoption through company acquisitions. Building an open source company takes many years of effort in the open. Hiring developers who are good and also willing to work in the open, building a community around a project, and a business model is delicate effort. Companies that can manage that are particularly attractive for investment and acquisition as they serve as a catalyst in turning the acquirer an open source company at scale.&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-W1_dCW7_7zQ/W_U4B933OGI/AAAAAAAALnQ/bT_ulkMiV2EHMJ1nPF1Twn0HwIq6APAEQCLcBGAs/s1600/2018_os_acquisitio%2B.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="338" data-original-width="1600" height="82" src="https://3.bp.blogspot.com/-W1_dCW7_7zQ/W_U4B933OGI/AAAAAAAALnQ/bT_ulkMiV2EHMJ1nPF1Twn0HwIq6APAEQCLcBGAs/s400/2018_os_acquisitio%2B.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Open source related large acquisions of 2018&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;Above is a list of the biggest open source software companies acquired in the current year. The list of&lt;a href="http://oss.cash/" target="_blank"&gt; open source companies&lt;/a&gt; and the following acquisitions is getting bigger every other day and this trend is only getting stronger.&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt; Micro OSS Fundings&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;In addition to the macro acquisitions of open source companies, there is also an increase in the decentralized micro funding of &lt;a href="https://opensource.com/article/18/8/open-source-tokenomics" target="_blank"&gt;self sustaining&lt;/a&gt; open source projects.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;On one end of the spectrum, there are open source projects that are maintained primarily by intrinsically motivated developers. On the other end, large open source companies are hiring developers to work on open source projects driven by company road maps and strategies. That leaves in the middle a large portion of open source projects that are not exciting enough for the accidental contributors, nor in the radar of the enterprise open source companies. In the recent years there is an increase in platforms for funding and sustaining these open source projects through bug bounties, micro payments, recurring donations, funding, subscriptions, etc. These open source funding platforms (which I have listed at &lt;a href="http://oss.fund/"&gt;http://oss.fund&lt;/a&gt;) allow individuals and open source users to take the responsibility of the open source sustainability in their own hands and pay the open source maintainers directly. It is the same open source model, but applied for value transfer rather than code contributions.&lt;/span&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/--b_sq6fti2A/W_xvNg8GgRI/AAAAAAAALns/o6niVfFGWzAoiMAjrpEHFPoepEhlTw7QACLcBGAs/s1600/oss_funnels.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="1003" data-original-width="1600" height="250" src="https://3.bp.blogspot.com/--b_sq6fti2A/W_xvNg8GgRI/AAAAAAAALns/o6niVfFGWzAoiMAjrpEHFPoepEhlTw7QACLcBGAs/s400/oss_funnels.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Open source contributor funnels&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;span style="font-family: inherit;"&gt;&amp;nbsp;The diagram above show the three intensive channels for open source contributors:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Hobbyist contributing to open source projects because of intrinsic motivations rather than monetary value.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Regular, planned and centralized subsidization by companies with open source business model (open core, SaaS, support, services, etc), monetizing the open source projects directly.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Irregular, micro, decentralized subsidization by independent open source users through &lt;a href="http://oss.fund/" target="_blank"&gt;OSS funding&lt;/a&gt; platforms.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;While the hobbyist and hackers started the open source movement, it got quickly turned into an enterprise monetization model. Now, having something for the remaining open source projects is welcome.&lt;/span&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AfVDccvtn7E" height="1" width="1" alt=""/&gt;</content><summary>Follow me on twitter for other posts in this space. A shorter version of this post was originally published on Opensource.com under CC BY-SA 4.0. If you prefer, read the same post on Medium. Over the last two decades open source has been expanding into all aspects of technology: from software to hardware, from small disruptive startup technologies to large boring enterprise software, from open sta...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-11-30T09:49:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/11/tipping-points-in-open-source.html</feedburner:origLink></entry></feed>
